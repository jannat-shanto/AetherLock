Algorithm: PrimeShift Cipher

Input:
  plaintext: String to encrypt
  ciphertext: String to decrypt
  key: Prime number used for both encryption and decryption
  operation: 'encrypt' or 'decrypt'

Output:
  ciphertext when encrypting
  plaintext when decrypting

// Main function
function main:
  print "PrimeShift Cipher Implementation"
  
  plaintext = input("Enter plaintext: ")
  
  while true:
    key = input("Enter a prime number as key: ")
    if isPrime(key):
      break
    else:
      print "Invalid key! Please enter a prime number."
  
  ciphertext = encrypt(plaintext, key)
  decrypted = decrypt(ciphertext, key)
  
  print "Original: " + plaintext
  print "Encrypted: " + ciphertext
  print "Decrypted: " + decrypted
  
  if plaintext == decrypted:
    print "Success! Original and decrypted texts match."
  else:
    print "Error! Decryption failed."

// Prime number check
function isPrime(n):
  if n <= 1:
    return false
  if n <= 3:
    return true
  if n mod 2 == 0 or n mod 3 == 0:
    return false
  
  i = 5
  while i * i <= n:
    if n mod i == 0 or n mod (i + 2) == 0:
      return false
    i = i + 6
  
  return true

// Encryption algorithm
function encrypt(plaintext, key):
  ciphertext = empty string
  
  for i from 0 to length(plaintext) - 1:
    ascii_val = integer value of plaintext[i]
    shift = key * (i + 1)
    new_val = (ascii_val + shift) mod 256
    
    // Ensure positive value
    if new_val < 0:
      new_val = new_val + 256
    
    ciphertext = ciphertext + character with ASCII value new_val
  
  return ciphertext

// Decryption algorithm
function decrypt(ciphertext, key):
  plaintext = empty string
  
  for i from 0 to length(ciphertext) - 1:
    ascii_val = integer value of ciphertext[i]
    shift = key * (i + 1)
    new_val = (ascii_val - shift) mod 256
    
    // Ensure positive value
    if new_val < 0:
      new_val = new_val + 256
    
    plaintext = plaintext + character with ASCII value new_val
  
  return plaintext
